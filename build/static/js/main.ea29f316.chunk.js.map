{"version":3,"sources":["components/form.jsx","components/profile.jsx","components/graph.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Form","props","onSubmit","event","handleUserFormSubmit","name","type","placeholder","required","value","formData","username","onChange","handleFormChange","imgStyle","borderRadius","width","height","ProfileDetails","class","infoclean","avatar_url","src","alt","style","bio","created_at","from","Date","location","public_repos","followers","following","html_url","href","target","graph","repoSize","repoNames","languageList","languageCount","i","repositories","length","push","size","language","indexOf","j","data","values","labels","layout","App","state","gitun","bind","preventDefault","axios","get","this","then","response","setState","login","catch","err","console","log","obj","className","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea29f316.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n  return (\r\n\r\n<form onSubmit={(event) => props.handleUserFormSubmit(event)}>\r\n      <label>\r\n        <p>Search:</p>\r\n        <input name=\"username\"\r\n        type=\"text\"\r\n        placeholder=\"GitHub username\"\r\n        required\r\n        value={props.formData.username}\r\n        onChange={props.handleFormChange}\r\n      />\r\n      </label>\r\n      <div>\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Submit\"\r\n      />\r\n    </div>\r\n    </form>\r\n\r\n)};\r\n\r\nexport default Form;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nconst imgStyle = {\r\n  borderRadius: \"50%\",\r\n  width: \"250px\",\r\n  height: \"250px\"\r\n};\r\n\r\nconst ProfileDetails = (props) => {\r\n    return (\r\n      <div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \"> {props.infoclean.avatar_url ? <img src={props.infoclean.avatar_url} alt=\"Profile\" style={imgStyle}/> : null }</div>\r\n        </div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \"> {props.infoclean.name ? <div><p>Name: {props.infoclean.name}</p></div> : null }</div>\r\n        </div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \"> {props.infoclean.bio ? <div><p>Bio: {props.infoclean.bio}</p></div> : null }</div>\r\n        </div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \"> {props.infoclean.created_at ? <div><p>Joined: {\r\n          <Moment from={new Date()}>{props.infoclean.created_at}</Moment>}</p></div> : null }</div>\r\n        </div>\r\n        <div class =\"row\">\r\n          <div class=\"col-md-8 \"> {props.infoclean.location ? <div><p>Location: {props.infoclean.location}</p></div> : null }</div>\r\n        </div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \"> {props.infoclean.public_repos ? <div><p>Public Repos: {props.infoclean.public_repos}</p></div> : null } </div>\r\n        </div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \">{props.infoclean.followers ? <div><p>Followers: {props.infoclean.followers}</p></div> : null } </div>\r\n        </div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \">{props.infoclean.following ? <div><p>Following: {props.infoclean.following}</p></div> : null } </div>\r\n        </div>\r\n        <div class = \"row\">\r\n          <div class=\"col-md-8 \">{props.infoclean.html_url ? <div><p><a href={props.infoclean.html_url} target=\"_blank\">View Profile</a></p></div> : null } </div>\r\n        </div>\r\n      </div>\r\n    )};\r\n    \r\nexport default ProfileDetails;","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst graph = (props) => {\r\n        const repoSize = [];\r\n        const repoNames = [];\r\n        const languageList = [];\r\n        const languageCount = [];\r\n        for(var i = 0; i < props.repositories.length; i++){\r\n            repoSize.push(props.repositories[i].size);\r\n            repoNames.push(props.repositories[i].name); \r\n        }\r\n        for(var i = 0; i < props.repositories.length; i++){\r\n            if(props.repositories[i].language != null) {\r\n                if(languageList.indexOf(props.repositories[i].language) === -1) {\r\n                  languageList.push(props.repositories[i].language);\r\n                }\r\n            }\r\n        }\r\n        for(var i = 0; i < languageList.length; i++) {\r\n            languageCount[i] = 0;\r\n        }\r\n        for(var i = 0; i < props.repositories.length; i++) {\r\n            for(var j = 0; j < languageList.length; j++) {\r\n                if(props.repositories[i].language === languageList[j]) {\r\n                    languageCount[j]++;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div class = \"row\">\r\n                <div>\r\n                    <Plot data={[\r\n                        {\r\n                        values: repoSize,\r\n                        labels: repoNames,\r\n                        type: 'pie'\r\n                        }\r\n                    ]} layout={{width: 500, height: 300}}/>\r\n                </div>\r\n                <div>\r\n                <Plot data={[\r\n                        {\r\n                        values: languageCount,\r\n                        labels: languageList,\r\n                        type: 'pie'\r\n                        }\r\n                    ]} layout={{width: 500, height: 300}}/>\r\n                </div>\r\n            </div>         \r\n\r\n        )\r\n\r\n};\r\n\r\nexport default graph;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Form from './components/form.jsx';\r\nimport Profile from './components/profile.jsx';\r\nimport Graph from './components/graph.jsx';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gitun: 'No username',\r\n      infoclean : '',\r\n      repositories : '',\r\n      formData: {\r\n        username: '',\r\n      },\r\n    }\r\n    this.handleUserFormSubmit = this.handleUserFormSubmit.bind(this);\r\n    this.handleFormChange = this.handleFormChange.bind(this);\r\n  }\r\n\r\n  handleUserFormSubmit(event) {\r\n    event.preventDefault();\r\n       axios.get('https://api.github.com/users/'+this.state.formData.username + '?access_token=caafbb4d4707561d30d114745a82780202a3d30d')\r\n    .then(response => this.setState({\r\n      gitun: response.data.login,\r\n      infoclean: response.data,\r\n    })).catch((err) => { console.log(err); });\r\n\r\n    this.setState({infoclean : ' '});\r\n    this.setState({repositories : ' '});\r\n    axios.get('https://api.github.com/users/'+this.state.formData.username+'/repos?access_token=caafbb4d4707561d30d114745a82780202a3d30d')\r\n      .then(response => this.setState({\r\n      repositories : response.data,\r\n    })).catch((err) => { console.log(err); });\r\n  };\r\n\r\n  handleFormChange(event) {\r\n    const obj = this.state.formData;\r\n    obj[event.target.name] = event.target.value;\r\n    this.setState(obj);\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div class=\"jumbotron\">\r\n          <header className=\"App-header\">\r\n            <h1 className=\"App-title\">GitHub API Project</h1>\r\n          </header>\r\n          <hr></hr>\r\n          <Form\r\n           formData={this.state.formData}\r\n           handleUserFormSubmit={this.handleUserFormSubmit}\r\n           handleFormChange={this.handleFormChange}\r\n          />\r\n          <hr></hr>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 text-left\"><Profile infoclean={this.state.infoclean}/></div>\r\n            <div class=\"col-md-6 text-left\"><Graph repositories={this.state.repositories}/></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './App.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}